<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>The Route Work action is used to input the routing requirements to Omni-Channel.
This example shows routing directly to the owner of the Email.</description>
        <name>RouteToOwner</name>
        <label>Route to Contactâ€™s Owner</label>
        <locationX>50</locationX>
        <locationY>974</locationY>
        <actionName>routeWork</actionName>
        <actionType>routeWork</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelId</name>
            <value>
                <stringValue>0N95j0000004zgZCAQ</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelLabel</name>
            <value>
                <stringValue>Chat</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelDevName</name>
            <value>
                <stringValue>sfdc_liveagent</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingType</name>
            <value>
                <stringValue>QueueBased</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingConfigId</name>
        </inputParameters>
        <inputParameters>
            <name>routingConfigLabel</name>
        </inputParameters>
        <inputParameters>
            <name>queueId</name>
            <value>
                <stringValue>00G5j000003sh4MEAQ</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>agentId</name>
        </inputParameters>
        <inputParameters>
            <name>agentLabel</name>
        </inputParameters>
        <inputParameters>
            <name>isAgentRequired</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>queueLabel</name>
            <value>
                <stringValue>Low</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skillOption</name>
        </inputParameters>
        <inputParameters>
            <name>skillRequirementsResourceItem</name>
        </inputParameters>
        <inputParameters>
            <name>isAgentVariable</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>botId</name>
        </inputParameters>
        <inputParameters>
            <name>botLabel</name>
        </inputParameters>
        <nameSegment>routeWork</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>The Route Work action is used to input the routing requirements to Omni-Channel.
This example shows routing to a defined Queue.</description>
        <name>RouteToQueueA</name>
        <label>Route to Queue A</label>
        <locationX>314</locationX>
        <locationY>974</locationY>
        <actionName>routeWork</actionName>
        <actionType>routeWork</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelId</name>
            <value>
                <stringValue>0N95j0000004zgZCAQ</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelLabel</name>
            <value>
                <stringValue>Chat</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelDevName</name>
            <value>
                <stringValue>sfdc_liveagent</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingType</name>
            <value>
                <stringValue>SkillsBased</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingConfigId</name>
            <value>
                <stringValue>0K95j0000004XDSCA2</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingConfigLabel</name>
            <value>
                <stringValue>LowRC</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>queueId</name>
        </inputParameters>
        <inputParameters>
            <name>agentId</name>
        </inputParameters>
        <inputParameters>
            <name>agentLabel</name>
        </inputParameters>
        <inputParameters>
            <name>queueLabel</name>
        </inputParameters>
        <inputParameters>
            <name>skillOption</name>
            <value>
                <stringValue>RunSBRRules</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skillRequirementsResourceItem</name>
        </inputParameters>
        <inputParameters>
            <name>botId</name>
        </inputParameters>
        <inputParameters>
            <name>botLabel</name>
        </inputParameters>
        <nameSegment>routeWork</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>The Route Work action is used to input the routing requirements to Omni-Channel.
This example shows routing to a defined Queue.</description>
        <name>RouteToQueueB</name>
        <label>Route to Queue B</label>
        <locationX>930</locationX>
        <locationY>458</locationY>
        <actionName>routeWork</actionName>
        <actionType>routeWork</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelId</name>
            <value>
                <stringValue>0N95j0000004zgZCAQ</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelLabel</name>
            <value>
                <stringValue>Chat</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>serviceChannelDevName</name>
            <value>
                <stringValue>sfdc_liveagent</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingType</name>
            <value>
                <stringValue>QueueBased</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>routingConfigId</name>
        </inputParameters>
        <inputParameters>
            <name>routingConfigLabel</name>
        </inputParameters>
        <inputParameters>
            <name>queueId</name>
            <value>
                <stringValue>00G5j000003sh4MEAQ</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>agentId</name>
        </inputParameters>
        <inputParameters>
            <name>agentLabel</name>
        </inputParameters>
        <inputParameters>
            <name>queueLabel</name>
            <value>
                <stringValue>Low</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>skillOption</name>
        </inputParameters>
        <inputParameters>
            <name>skillRequirementsResourceItem</name>
        </inputParameters>
        <inputParameters>
            <name>botId</name>
        </inputParameters>
        <inputParameters>
            <name>botLabel</name>
        </inputParameters>
        <nameSegment>routeWork</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>59.0</apiVersion>
    <assignments>
        <description>This example node saves the value of the Subject field in the pre-chat list to a variable in the Flow.</description>
        <name>StoreSubjectField</name>
        <label>Store Subject Field</label>
        <locationX>402</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>SubjectField</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>LoopOverPreChat.CustomDetailContextValue</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>LoopOverPreChat</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>This example decision node checks to see if the entry in the pre-chat list is either the Subject or the Email field.</description>
        <name>PrechatFieldDecision</name>
        <label>Is the Pre-Chat Entry the Subject or Email field?</label>
        <locationX>798</locationX>
        <locationY>242</locationY>
        <defaultConnector>
            <targetReference>LoopOverPreChat</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SubjectOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>LoopOverPreChat.CustomDetailContextKey</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Subject</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>StoreSubjectField</targetReference>
            </connector>
            <label>Subject</label>
        </rules>
        <rules>
            <name>EmailOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>LoopOverPreChat.CustomDetailContextKey</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContactRecord</targetReference>
            </connector>
            <label>Email</label>
        </rules>
    </decisions>
    <decisions>
        <description>This example decision node looks at the Chat Subject and decides which Queue they should be routed to. 
Here it checks if the terms Queue A, Queue B, or Agent appear in the subject.</description>
        <name>RouteChatDecision</name>
        <label>How Should the Chat be Routed?</label>
        <locationX>314</locationX>
        <locationY>866</locationY>
        <defaultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>RouteToQueueB</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>All Other Scenarios</defaultConnectorLabel>
        <rules>
            <name>QueueAOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SubjectField</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Agent</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RouteToOwner</targetReference>
            </connector>
            <label>Subject Contains Agent</label>
        </rules>
        <rules>
            <name>QueueBOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SubjectField</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Queue</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RouteToQueueA</targetReference>
            </connector>
            <label>Subject Contains Queue</label>
        </rules>
    </decisions>
    <description>Routes each chat to an agent or queue based on conditions that you define.</description>
    <environments>Default</environments>
    <interviewLabel>Chats Routed to Agents and Queues {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Chats Routed to Agents and Queues</label>
    <loops>
        <description>This example node will iterate through each of the pre-chat variables so the values that the customer entered can be used in the flow decision.</description>
        <name>LoopOverPreChat</name>
        <label>Loop over PreChat Entries</label>
        <locationX>314</locationX>
        <locationY>134</locationY>
        <collectionReference>prechatInfo</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>PrechatFieldDecision</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>RouteChatDecision</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>RoutingFlow</processType>
    <recordLookups>
        <description>This example action is used to load the Contact, using the Email address that the customer entered into the pre-chat form.
This contact can later be used to inform the decision on where to route the chat.
If there is an error when loading the Contact then it navigates directly to route the work to Queue B.</description>
        <name>GetContactRecord</name>
        <label>Get Contact Using Email</label>
        <locationX>666</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>LoopOverPreChat</targetReference>
        </connector>
        <faultConnector>
            <targetReference>RouteToQueueB</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Email</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>EmailField</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <sourceTemplate>omnichannel_chat__QueuesChat</sourceTemplate>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>LoopOverPreChat</targetReference>
        </connector>
    </start>
    <status>Obsolete</status>
    <variables>
        <description>Email Address from the Pre-Chat form.</description>
        <name>EmailField</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>The chat transcript record that is being inputted into the flow. Necessary for the flow to run.</description>
        <name>input_record</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>LiveChatTranscript</objectType>
    </variables>
    <variables>
        <description>Conversation Context Entry object(s) that will provide information from Pre-Chat fields.</description>
        <name>prechatInfo</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>ConversationContextEntry</objectType>
    </variables>
    <variables>
        <description>The ID of the record being inputted into the flow. Necessary for the flow to run.</description>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Subject field from the Pre-Chat form.</description>
        <name>SubjectField</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
